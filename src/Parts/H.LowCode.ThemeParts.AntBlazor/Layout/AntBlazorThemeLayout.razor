@namespace H.LowCode.ThemeParts.AntBlazor
@inherits ThemePartLayoutBase

@inject ComponentStateWrapper<AntBlazorThemeLayout, MenuDataItem[]> MenuDataState
@inject ComponentStateWrapper<string, string> AppIdState

<link href="_content/H.LowCode.ThemeParts.AntBlazor/renderengine.css" rel="stylesheet" />

<AntDesign.ProLayout.BasicLayout FixedHeader="true" Class="renderengine" Logo="@("logo.png")" Title="@AppIdState.Value"
        MenuData="@MenuDataState.Value" MenuAccordion="true" Layout="AntDesign.ProLayout.Layout.Side">
    <RightContentRender>
        @*<AntDesign.Pro.Template.Components.RightContent />*@
        RightContent
    </RightContentRender>
    <ChildContent>
        @Body
    </ChildContent>
    <FooterRender></FooterRender>
</AntDesign.ProLayout.BasicLayout>

@code
{
    protected override async Task OnInitializedAsync()
    {
        if (MenuDataState.Value is null)
        {
            string appid = base.GetAppId();
            AppIdState.Value = appid;
            var menus = await base.GetMenusAsync(appid);
            MenuDataState.Value = ConvertMenus(appid, menus);

            await base.OnInitializedAsync();
        }
    }

    private MenuDataItem[] ConvertMenus(string appId, IList<MenuSchema> menuList)
    {
        var menus = new List<MenuDataItem>();
        foreach (var menu in menuList)
        {
            var m = new MenuDataItem()
                {
                    Path = $"/{appId}/{menu.MenuUrl}",
                    Name = menu.Title,
                    Key = menu.Id,
                    Icon = menu.Icon
                };
            if (menu.Childrens.Count > 0)
                m.Children = ConvertMenus(appId, menu.Childrens);
            menus.Add(m);
        }
        return menus.ToArray();
    }
}