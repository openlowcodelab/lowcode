@page "/workbench/myapps"
@namespace H.LowCode.Workbench
@layout WorkbenchLayout

@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager
@inject ComponentStateWrapper<MyApps, IList<AppSchema>> State

<PageTitle>我的应用 - H.LowCode</PageTitle>

<div style="margin:-24px -24px 0px -24px; padding: 0 50px; background-size: 100% 80px; background-image:url(https://img.alicdn.com/imgextra/i4/O1CN01U2c7FD1EQyHx3iei2_!!6000000000347-2-tps-5760-320.png)">
    <div style="width:80%; line-height:80px; margin:auto;">
        <div style="display: flex; justify-content: space-between; margin: 0 0 8px 5px;">
            <div style="text-align: left; width:500px;">
                <span style="font-size: large; margin-right:20px;">XXX 你好!</span>
                <span style="color:#c0baba;">你可以从这里开始创建应用～</span>
            </div>
            <div style="text-align: right; width:80px; margin-right:10px;">
                <Button Type="@ButtonType.Primary" OnClick="@(()=>{ _visible = true; })">创建应用</Button>
            </div>
        </div>
    </div>
</div>
<div style="width:80%; overflow: hidden; margin:auto; padding: 10px;">
    <div style="display: flex; justify-content: space-between; margin: 0 0 8px 5px;">
        <div style="text-align: left; width:500px;">
            <div style="width: 200px;">
                <Search Placeholder="应用名称" OnSearch="()=>{}" />
            </div>
        </div>
        <div style="text-align: right; width:300px; line-height:32px; margin-right:10px;">
            <Select TItemValue="string" TItem="string" DefaultValue="@("all")" Style="width:100px">
                <SelectOptions>
                    <SelectOption Value="@("all")" Label="全部" />
                    <SelectOption Value="@("published")" Label="已发布" />
                    <SelectOption Value="@("unpublished")" Label="未发布" />
	            </SelectOptions>
            </Select>
        </div>
    </div>

    @if (State.Value != null)
    {
        @foreach (var app in State.Value)
        {
            <Card Class="myapps" Style="float:left; width:300px; margin:5px;" Bordered>
                <ChildContent>
                    <CardMeta AvatarTemplate="@avatarTemplate" Title="@app.Name" Description="@app.Description" Style="height: 60px;" />
                </ChildContent>
                <ActionTemplate>
                    <CardAction>
                        <a href="@($"/myapp/{app.Id}/pagemanager")" title="开发应用" target="_blank"><Icon Type="desktop" /></a>
                    </CardAction>
                    <CardAction>
                        <a href="@($"{app.Id}/index")" title="访问应用" target="_blank"><Icon Type="global" /></a>
                    </CardAction>
                    <CardAction>
                        <a href="javascript:void(0);"><Icon Type="question-circle" /></a>
                    </CardAction>
                    <CardAction>
                        <a href="@($"/myapp/{app.Id}/appsettings")" title="应用设置" target="_blank"><Icon Type="setting" /></a>
                    </CardAction>
                </ActionTemplate>
            </Card>
        }
    }
</div>

<Modal Title="创建应用" @bind-Visible="@_visible" Width="1100" Footer="null">
    <AppCreate CreateAppAction="ReloadApps"></AppCreate>
</Modal>

@code {
    private bool _visible = false;

    RenderFragment avatarTemplate = @<Avatar Icon="appstore"></Avatar>;

    protected override async Task OnInitializedAsync()
    {
        if (State.Value is null)
        {
            State.Value = await LoadAppsAsync();

            await base.OnInitializedAsync();
        }
    }

    private async Task<IList<AppSchema>> LoadAppsAsync()
    {
        var httpClient = HttpClientFactory.CreateClient();
        httpClient.BaseAddress = new Uri(NavigationManager.BaseUri);

        var result = await httpClient.GetFromJsonAsync<IList<AppSchema>>($"api/designengine/getapps");
        return result;
    }

    private async void ReloadApps()
    {
        _visible = false;
        await LoadAppsAsync();
        StateHasChanged();
    }
}