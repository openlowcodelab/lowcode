@inject DragDropService DragDropService

@foreach(var model in DragModels)
{
    <DragItem DragDropModel="model" OnItemDragStart="OnItemDragStart"></DragItem>
}

@code {
    private List<DragDropModel> DragModels;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        DragModels = new List<DragDropModel>()
        {
            new DragDropModel(){
                Title = "文本框",
                ComponentType = "input",
                DropRenderFragment = (builder) =>
                {
                    builder.OpenComponent(1, typeof(Input<string>));
                    builder.CloseComponent();
                }
            },
            new DragDropModel(){
                Title = "下拉框",
                ComponentType = "select",
                DropRenderFragment = (builder) =>
                {
                    builder.OpenComponent(0, typeof(Select<string, string>));
                    builder.CloseComponent();
                }
            },
            new DragDropModel(){
                Title = "日期",
                ComponentType = "datepicker",
                DropRenderFragment = (builder) =>
                {
                    builder.OpenComponent(0, typeof(DatePicker<DateTime?>));
                    builder.AddAttribute(1, "Picker", DatePickerType.Date);
                    builder.CloseComponent();
                }
            }
        };
    }

    public void OnItemDragStart(DragDropModel model)
    {
        //设置当前拖拽项
        DragDropService.CurrentDragModel = model;
    }
}
