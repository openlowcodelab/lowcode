@using H.LowCode.MetaSchema

@code {
    [Parameter]
    public ComponentSchema Component { get; set; }

    protected virtual ComponentSchema CreateComponent(string key, Action<ComponentSchema> action = null)
    {
        var c = Component.Childrens.FirstOrDefault(t =>
            {
                if (t.ComponentProperty.ExtensionData.ContainsKey(key))
                    return true;
                return false;
            });
        if (c != null)
            return c;

        var component = CreateContainerComponent(key);

        if(action != null) action(component);

        Component.Childrens.Add(component);

        return component;
    }

    private ComponentSchema CreateContainerComponent(string name)
    {
        var component = new ComponentSchema(name);
        component.Id = Guid.NewGuid();
        component.Refresh = Component.Refresh;

        component.ComponentFragments = [];
        component.ComponentProperty = new();
        component.ComponentStyle = new() { DefaultStyle = "height:100%; width:100%;" };
        component.ComponentEvent = default;
        component.DragEffectStyle = default;
        component.IsDropedAfter = default;
        component.IsDroppedFromComponentPanel = default;
        component.IsHiddenTitle = true;
        component.IsSelected = default;
        component.Opacity = default;

        component.IsContainerComponent = true;
        component.ComponentProperty.ExtensionData.Add(name, name);
        component.ParentId = Component.Id;

        return component;
    }
}
