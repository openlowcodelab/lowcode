@namespace H.LowCode.MyApp
@inherits LowCodeLayoutComponentBase

@inject IAppApplicationService AppApplicationService
@inject ComponentState<MyAppLayout, MenuDataItem[]> MenuDataState
@inject ComponentState<AppPartsSchema> AppState

<link href="@Assets["_content/H.LowCode.MyApp/myapp.css"]" rel="stylesheet" />

@if (_appSchema != null)
{
    <CascadingValue Value="@_appSchema" Name="appCascading">
        <AntDesign.ProLayout.BasicLayout FixedHeader="true" Class="myapp" Logo="@("logo.png")" Title="@_appSchema.Name"
        MenuData="@_menuDataItems" MenuAccordion="true" Layout="AntDesign.ProLayout.Layout.Side">
            <RightContentRender>
                RightContent
            </RightContentRender>
            <ChildContent>
                @Body
            </ChildContent>
            <FooterRender></FooterRender>
        </AntDesign.ProLayout.BasicLayout>
        <SettingDrawer />
    </CascadingValue>
}

@code
{
    private AppPartsSchema _appSchema;
    private MenuDataItem[] _menuDataItems;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _appSchema = await AppState.GetOrAddAsync(typeof(AppPartsSchema), async () =>
        {
            return await GetAppSchemaAsync(AppId);
        });

        _menuDataItems = MenuDataState.GetOrAdd(this, () =>
        {
            return InitMenuData(AppId);
        });
    }

    private async Task<AppPartsSchema> GetAppSchemaAsync(string appId)
    {
        return await AppApplicationService.GetByIdAsync(appId);
    }

    private MenuDataItem[] InitMenuData(string appId)
    {
        MenuDataItem[] menuData = [
            new MenuDataItem
            {
                Path = $"/myapp/{appId}/pagemanager",
                Name = "页面管理",
                Icon = "profile",
                Key = "page"
            },
        new MenuDataItem
            {
                Path = $"/myapp/{appId}/menumanager",
                Name = "菜单管理",
                Icon = "menu",
                Key = "menu"
            },
        new MenuDataItem
            {
                Path = $"/myapp/{appId}/datasource",
                Name = "数据源",
                Icon = "database",
                Key = "datasource"
            },
        new MenuDataItem
            {
                Path = $"/myapp/{appId}/integration",
                Name = "集成",
                Icon = "api",
                Key = "integration"
            },
        new MenuDataItem
            {
                Path = $"/myapp/{appId}/autoflow",
                Name = "自动化",
                Icon = "deployment-unit",
                Key = "autoflow"
            },
        new MenuDataItem
            {
                Path = $"/myapp/{appId}/publish",
                Name = "应用发布",
                Icon = "cloud-upload",
                Key = "publish"
            },
        new MenuDataItem
            {
                Path = $"/myapp/{appId}/appsettings",
                Name = "应用设置",
                Icon = "setting",
                Key = "appsettings"
            }
        ];
        return menuData;
    }
}