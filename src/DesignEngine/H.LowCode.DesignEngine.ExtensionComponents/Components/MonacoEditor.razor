@inject IJSRuntime JSRuntime

<link rel="stylesheet" type="text/css" href="_content/H.LowCode.DesignEngine.ExtensionComponents/MonacoEditor/editor/editor.main.css" />

<div id="monaco-container" style="width:100%; height:100%;"></div>

@code {
    [Parameter]
    public ComponentSchema Component { get; set; }

    /// <summary>
    /// 保存初始的 Component，避免跟随 Component 变化
    /// </summary>
    private ComponentSchema _component;

    [Parameter]
    public string Language { get; set; } = "javascript";

    [Parameter]
    public string Code { get; set; } = "function hello() { console.log('Hello, World!'); }";

    [Parameter]
    public string Theme { get; set; } = "vs-dark";

    private Lazy<Task<IJSObjectReference>> moduleTask;

    #region Init
    protected override void OnInitialized()
    {
        Init();
        base.OnInitialized();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadMonacoEditorAsync("monaco-container", Code, Language, Theme);
        }
    }

    protected override bool ShouldRender()
    {
        return false;
    }

    private void Init()
    {
        if (_component == null)
            _component = Component.CopyNew();
    }

    private async Task LoadMonacoEditorAsync(string containerId, string code, string language, string theme)
    {
        moduleTask = new(() => JSRuntime.InvokeAsync<IJSObjectReference>("import",
             "./_content/H.LowCode.DesignEngine.ExtensionComponents/MonacoEditor/monaco.js").AsTask());

        var module = await moduleTask.Value;
        await module.InvokeVoidAsync("initMonacoEditor", containerId, code, language, theme);
    }
    #endregion
}