@using H.LowCode.MetaSchema

<Layout Style="height:100%">
    <Sider Style="background: #f4f7fa; height:100%;">
        <DropItemContainer ParentComponent="@CreatComponent("layoutcontainer-sider")"></DropItemContainer>
    </Sider>
    <Content Style="height: 100%;">
        <DropItemContainer ParentComponent="@CreatComponent("layoutcontainer-content")"></DropItemContainer>
    </Content>
</Layout>

@code {
    [Parameter]
    public ComponentSchema Component{ get; set; }

    /// <summary>
    /// 保存初始的 Component，避免跟随 Component 变化
    /// </summary>
    private ComponentSchema _component;

    #region Init
    protected override void OnInitialized()
    {
        Init();

        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
            RegisterEventDispatcher();
    }

    private void Init()
    {
        if (_component == null)
            _component = Component.CreateNew();
    }

    private void RegisterEventDispatcher()
    {
        //订阅属性面板中的事件
        BlazorEventDispatcher.RegisterEvent("designengine.propertysetting.onchange", (value) =>
        {
            StateHasChanged();
        });
    }
    #endregion

    private ComponentSchema CreatComponent(string key)
    {
        if (Component.Childrens.Count >= 2)
        {
            return Component.Childrens.FirstOrDefault(t =>
            {
                if (t.ComponentPropertySchema.ExtensionData.ContainsKey(key))
                    return true;
                return false;
            });
        }

        var component = _component.CreateNew();
        component.ComponentCategory = ComponentCategory.Container;
        component.ComponentPropertySchema.ExtensionData.Add(key, key);
        component.ParentId = Component.Id;

        Component.Childrens.Add(component);

        return component;
    }
}