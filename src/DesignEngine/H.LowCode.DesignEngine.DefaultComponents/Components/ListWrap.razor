<AntList DataSource="@DataSource" TItem="ListItem">
    <ListItem OnClick="()=>OnItemClick(context.Title)">
        <ListItemMeta AvatarTemplate="avatar" Description="@context.Content">
            <TitleTemplate>
                <a href="https://antblazor.com">@context.Title</a>
            </TitleTemplate>
        </ListItemMeta>
    </ListItem>
</AntList>

@code {
    [Parameter]
    public ComponentSchema Component { get; set; }

    [Parameter]
    public IList<ListItem> DataSource { get; set; } = new List<ListItem>
    {
        new(){ Title="Ant Design Title 1", Content = "Ant Design, a design language for background applications, is refined by Ant UED Team" },
        new(){ Title="Ant Design Title 2", Content = "Ant Design, a design language for background applications, is refined by Ant UED Team" },
        new(){ Title="Ant Design Title 3", Content = "Ant Design, a design language for background applications, is refined by Ant UED Team" }
    };

    /// <summary>
    /// 保存初始的 Component，避免跟随 Component 变化
    /// </summary>
    private ComponentSchema _component;

    private RenderFragment avatar = @<Avatar Src="https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png"></Avatar>;

    #region Init
    protected override void OnInitialized()
    {
        Init();

        base.OnInitialized();
    }

    protected override bool ShouldRender()
    {
        return false;
    }

    private void Init()
    {
        if (_component == null)
            _component = Component.CopyNew();
    }
    #endregion

    #region
    private void OnItemClick(string title)
    {

    }
    #endregion

    #region
    private ComponentSchema CreatComponent(string key)
    {
        var c = Component.Childrens.FirstOrDefault(t =>
            {
                if (t.ComponentProperty.ExtensionData.ContainsKey(key))
                    return true;
                return false;
            });
        if (c != null)
            return c;

        var component = _component.CopyNew();
        component.IsContainerComponent = true;
        component.ComponentProperty.ExtensionData.Add(key, key);
        component.ParentId = Component.Id;

        Component.Childrens.Add(component);

        return component;
    }
    #endregion

    public class ListItem
    {
        public string Title { get; set; }

        public string Content{ get; set; }
    }
}