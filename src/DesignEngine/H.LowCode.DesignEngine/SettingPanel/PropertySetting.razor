@if (ComponentSchema != null)
{
    <div class="propertysetting-item">
        <label>Name <span style="font-size:10px; color:gray;">(字段名称/英文)</span>：</label>
        <Input TValue="string" Value="@ComponentSchema.ComponentProperty.Name" OnChange="(value) => OnPropertyChange()" />
    </div>
    <div class="propertysetting-item">
        <label>标题：</label>
        <Input TValue="string" Value="@ComponentSchema.ComponentProperty.Title" OnChange="(value) => OnPropertyChange()" />
    </div>
    <div class="propertysetting-item">
        <label>描述：</label>
        <TextArea Value="@ComponentSchema.ComponentProperty.Description" />
    </div>
    @if (ComponentSchema.IsShowProperty(nameof(ComponentPropertySchema.DefaultValue)))
    {
        <div class="propertysetting-item">
            <label>默认值：</label>
            <Input TValue="string" Value="@ComponentSchema.ComponentProperty.DefaultValue" />
        </div>
    }
    @if (ComponentSchema.IsShowProperty(nameof(ComponentPropertySchema.IsRequired)))
    {
        <div class="propertysetting-item">
            <label>必填：</label>
            <Checkbox Value="@ComponentSchema.ComponentProperty.IsRequired" OnChange="(value) => OnPropertyChange()" />
        </div>
    }

    @*"type": "string"*@
    @if (ComponentSchema.ComponentProperty.ComponentValueType == ComponentValueType.String)
    {
        if (ComponentSchema.IsShowProperty(nameof(ComponentPropertySchema.MaximumLength)))
        {
            <div class="propertysetting-item">
                <label>最大长度：</label>
                <Input TValue="long?" Value="@ComponentSchema.ComponentProperty.MaximumLength" OnChange="(value) => OnPropertyChange()" />
            </div>
        }
        if (ComponentSchema.IsShowProperty(nameof(ComponentPropertySchema.MinimumLength)))
        {
            <div class="propertysetting-item">
                <label>最小长度：</label>
                <Input TValue="long?" Value="@ComponentSchema.ComponentProperty.MinimumLength" OnChange="(value) => OnPropertyChange()" />
            </div>
        }
        if (ComponentSchema.IsShowProperty(nameof(ComponentPropertySchema.Pattern)))
        {
            <div class="propertysetting-item">
                <label>Pattern：</label>
                <Input TValue="string" Value="@ComponentSchema.ComponentProperty.Pattern" OnChange="(value) => OnPropertyChange()" />
            </div>
        }
        if (ComponentSchema.IsShowProperty(nameof(ComponentPropertySchema.Format)))
        {
            <div class="propertysetting-item">
                <label>Format：</label>
                <Input TValue="string" Value="@ComponentSchema.ComponentProperty.Format" OnChange="(value) => OnPropertyChange()" />
            </div>
        }
    }

    @*"type": "integer"*@
    @*"type": "number"*@
    @if (ComponentSchema.ComponentProperty.ComponentValueType == ComponentValueType.Integer || ComponentSchema.ComponentProperty.ComponentValueType == ComponentValueType.Number)
    {
        if (ComponentSchema.IsShowProperty(nameof(ComponentPropertySchema.Maximum)))
        {
            <div class="propertysetting-item">
                <label>最大值：</label>
                <Input TValue="double?" Value="@ComponentSchema.ComponentProperty.Maximum" OnChange="(value) => OnPropertyChange()" />
            </div>
        }
        if (ComponentSchema.IsShowProperty(nameof(ComponentPropertySchema.Minimum)))
        {
            <div class="propertysetting-item">
                <label>最小值：</label>
                <Input TValue="double?" Value="@ComponentSchema.ComponentProperty.Minimum" OnChange="(value) => OnPropertyChange()" />
            </div>
        }
    }
    @*"type": "array"*@
    @*if(ComponentSchema.ComponentValueType == ComponentValueType.Array)
{

}*@

    @if (ComponentSchema.IsShowProperty(nameof(ComponentPropertySchema.ItemWidth)))
    {
        <div class="propertysetting-item">
            <label>组件宽度：</label>
            <Slider TValue="double" Value="@ComponentSchema.ComponentProperty.ItemWidth" DefaultValue="12" Min="4" Max="24" OnChange="(value) => OnPropertyChange()" />
        </div>
    }
    @if (ComponentSchema.IsShowProperty(nameof(ComponentPropertySchema.LabelWidth)))
    {
        <div class="propertysetting-item">
            <label>标签宽度：</label>
            <Slider TValue="double" Value="@ComponentSchema.ComponentProperty.LabelWidth" DefaultValue="180" Min="4" Max="300" OnChange="(value) => OnPropertyChange()" />
        </div>
    }

    @*自定义*@
    @if (ComponentSchema.ComponentProperty.ExtensionProperties != null)
    {
        foreach (var kv in ComponentSchema.ComponentProperty.ExtensionProperties)
        {
            <div class="propertysetting-item">
                <label>@kv.Value.Label：</label>
                <Input TValue="string" Value="@kv.Value.Value.ToString()" OnChange="(value) => OnPropertyChange()" />
            </div>
        }
    }
}

@code {
    [Parameter]
    public ComponentSchema ComponentSchema { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
    }

    private void OnPropertyChange()
    {
        BlazorEventDispatcher.Trigger("designengine.propertysetting.onchange", null);
    }
}
