@namespace H.LowCode.DesignEngine

<div style="border-left: 5px solid #d0d4da;padding: 0 0 0 8px; margin:30px 0 10px;">更多</div>

@foreach (var extPropertyKV in Component.ComponentProperty.ExtensionProperties)
{
    <div class="propertysetting-item">
        @if (extPropertyKV.Value.IsShowLabel)
        {
            <label>@extPropertyKV.Value.Label：</label>
        }

        @if (extPropertyKV.Value.SettingItemType == PropertyItemTypeEnum.Text)
        {
            <Input TValue="string" @bind-value="@extPropertyKV.Value.StringValue" OnChange="OnStringPropertyChange" />
        }
        else if (extPropertyKV.Value.SettingItemType == PropertyItemTypeEnum.Text_Int)
        {
            <Input TValue="int?" @bind-value="@extPropertyKV.Value.IntValue" OnChange="OnIntPropertyChange" />
        }
        else if (extPropertyKV.Value.SettingItemType == PropertyItemTypeEnum.Radio)
        {

        }
        else if (extPropertyKV.Value.SettingItemType == PropertyItemTypeEnum.Checkbox)
        {
            <Checkbox @bind-checked="@extPropertyKV.Value.BoolValue"></Checkbox>
        }
        else if (extPropertyKV.Value.SettingItemType == PropertyItemTypeEnum.Select)
        {

        }
        else if (extPropertyKV.Value.SettingItemType == PropertyItemTypeEnum.Switch)
        {

        }
        else if (extPropertyKV.Value.SettingItemType == PropertyItemTypeEnum.Date)
        {

        }
        else if (extPropertyKV.Value.SettingItemType == PropertyItemTypeEnum.Textarea)
        {

        }

        @if (!string.IsNullOrEmpty(extPropertyKV.Value.Description))
        {
            <div style="color:#c7c7c7">@extPropertyKV.Value.Description</div>
        }
    </div>
}

@code {
    [Parameter]
    public ComponentSchema Component { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    private void OnExtensionPropertyChange(string key, string propertyValue)
    {
        var contains = Component.ComponentProperty.ExtensionProperties.ContainsKey(key);
        if (contains)
        {
            Component.ComponentProperty.ExtensionProperties[key].StringValue = propertyValue;
        }
    }

    private void OnStringPropertyChange(string value)
    {

    }

    private void OnIntPropertyChange(int? value)
    {
        
    }
}
